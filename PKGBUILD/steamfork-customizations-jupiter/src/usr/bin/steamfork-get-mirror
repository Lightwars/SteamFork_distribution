#!/bin/bash
# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2024-present Fewtarius

STAGING_MIRRORLIST="/tmp/steamfork-mirrors.txt"

### Each mirror hashes its repository and provides the hash in the web root. Other
### nodes in the pool check each node's hash, and if they match the node is added
### to the mirror list on that node.  Each mirrorlist.txt is independent.

DEFAULT_MIRRORS=( "www.steamfork.org" "www2.steamfork.org" "www3.steamfork.org" )
for MIRROR in ${DEFAULT_MIRRORS[@]}
do
  curl -Lo ${STAGING_MIRRORLIST} https://${MIRROR}/mirrorlist.txt 2>/dev/null
  if [ "$?" = "0" ]
  then
    break
  else
    if [ -f "${STAGING_MIRRORLIST}" ]
    then
      rm -f ${STAGING_MIRRORLIST}
    fi
  fi
done

case ${1} in
	list)
		### Just a simple list
		cat ${STAGING_MIRRORLIST}
	;;
	random)
		### Randomize the mirror list output
		cat ${STAGING_MIRRORLIST} | sort -R
	;;
	*)
		### Fetch a random mirror from the array, and test to make sure it's available.
		readarray -t MIRROR_LIST < ${STAGING_MIRRORLIST}
		for COUNT in $(seq 0 1 ${#MIRROR_LIST[@]})
		do
			SELECTED_MIRROR=${MIRROR_LIST[ $RANDOM % ${#MIRROR_LIST[@]}]}
			curl -Lo /dev/null ${SELECTED_MIRROR}/mirrorlist.txt >/dev/null 2>&1
			if [ "$?" = "0" ]
			then
			  echo ${SELECTED_MIRROR}
			  break
			fi
			sleep .1
		done
	;;
esac

rm -f ${STAGING_MIRRORLIST}
